group:
------
-code review: io, net, nio, rmi, security
-create LocalContext<JObject*> helper, JObject::NULL, JObject::isNull(), isNull(JObject*),
-JString.isShared?
-wiki pages on how to generate classes
-wiki page on rmi package, samples + tutorial
-develop java boot loading + translate it for jcpp
-dont expose JPrimitiveXX, look for then and set them protected and look that pattern everywhere and change it
-compilation takes too much time, check other build systems like cmake
-check leak when catching exception and no delete
-checker delete des JEntry

group:
-------
-look for a better string, for encoding, jstring?
-better way to lock/unlock while exception thrown
-add more attributes to JField like static, transient, ...
-implement all JSystem class
-make thread excecption handling more robust
-review call of all keySet/entrySet/iterator and check that we call delete
-implement all jcpp.util, jcpp.net (a quite big list :))
-remove implementation allowing == to call equals ?
-implement socket/read/connecttimeout
-keep operator+= -= *= ?
-compilation should generate jars containings libraries + resource files in order to implement Classloader.findResource


group:
-------
-check all new/delete calls
-constructor in order to ease casting


Remaining classes to translate by package:
------------------------------------------

jcpp::nio::file:
----------------
Classes
    Files
    FileStore
    FileSystems
    LinkPermission
    Paths
    SimpleFileVisitor
    StandardWatchEventKinds


jcpp::io:
---------
JConsole
JFilePermission
JPrintStream
JPrintWriter
JRandomAccessFile
